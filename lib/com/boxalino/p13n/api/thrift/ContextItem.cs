/**
 * Autogenerated by Thrift Compiler (0.9.2)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace com.boxalino.p13n.api.thrift
{

  /// <summary>
  /// <dl>
  /// <dt>indexId</dt>
  /// <dd>id of the index to fetch context item data from</dd>
  /// 
  /// <dt>fieldName</dt>
  /// <dd>the field name of the item's unique identifier within the items index</dd>
  /// <dd>for example: 'sku' for items 'products'</dd>
  /// 
  /// <dt>contextItemId</dt>
  /// <dd>actual item's identifier</dd>
  /// <dd>for example: actual sku of the product</dd>
  /// 
  /// <dt>role</dt>
  /// <dd>role of the item within the context, used to address the item in the
  /// recommendation script.</dd>
  /// <dd>for example: 'main product' for recommendations within product detail
  /// page</dd>
  /// </dl>
  /// </summary>
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class ContextItem : TBase
  {
    private string _indexId;
    private string _fieldName;
    private string _contextItemId;
    private string _role;

    public string IndexId
    {
      get
      {
        return _indexId;
      }
      set
      {
        __isset.indexId = true;
        this._indexId = value;
      }
    }

    public string FieldName
    {
      get
      {
        return _fieldName;
      }
      set
      {
        __isset.fieldName = true;
        this._fieldName = value;
      }
    }

    public string ContextItemId
    {
      get
      {
        return _contextItemId;
      }
      set
      {
        __isset.contextItemId = true;
        this._contextItemId = value;
      }
    }

    public string Role
    {
      get
      {
        return _role;
      }
      set
      {
        __isset.role = true;
        this._role = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool indexId;
      public bool fieldName;
      public bool contextItemId;
      public bool role;
    }

    public ContextItem() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.String) {
              IndexId = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              FieldName = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              ContextItemId = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.String) {
              Role = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("ContextItem");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (IndexId != null && __isset.indexId) {
        field.Name = "indexId";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(IndexId);
        oprot.WriteFieldEnd();
      }
      if (FieldName != null && __isset.fieldName) {
        field.Name = "fieldName";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(FieldName);
        oprot.WriteFieldEnd();
      }
      if (ContextItemId != null && __isset.contextItemId) {
        field.Name = "contextItemId";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(ContextItemId);
        oprot.WriteFieldEnd();
      }
      if (Role != null && __isset.role) {
        field.Name = "role";
        field.Type = TType.String;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Role);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder __sb = new StringBuilder("ContextItem(");
      bool __first = true;
      if (IndexId != null && __isset.indexId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("IndexId: ");
        __sb.Append(IndexId);
      }
      if (FieldName != null && __isset.fieldName) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("FieldName: ");
        __sb.Append(FieldName);
      }
      if (ContextItemId != null && __isset.contextItemId) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("ContextItemId: ");
        __sb.Append(ContextItemId);
      }
      if (Role != null && __isset.role) {
        if(!__first) { __sb.Append(", "); }
        __first = false;
        __sb.Append("Role: ");
        __sb.Append(Role);
      }
      __sb.Append(")");
      return __sb.ToString();
    }

  }

}
